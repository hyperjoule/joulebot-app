{"version":3,"file":"static/js/main.c0e48146.js","mappings":"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","sources":["src/screens/Joulebot/styles.js","src/api/config.js","src/utils/saveImageToGallery.js","src/components/MessageItem.js","src/data/personalities.js","src/api/api.js","src/screens/Joulebot/index.js","src/hooks/useSendMessage.js","src/screens/SettingsScreen/styles.js","src/screens/SettingsScreen/index.js","App.js","webpack/bootstrap","webpack/runtime/chunk loaded","webpack/runtime/compat get default export","webpack/runtime/define property getters","webpack/runtime/global","webpack/runtime/hasOwnProperty shorthand","webpack/runtime/make namespace object","webpack/runtime/publicPath","webpack/runtime/jsonp chunk loading","webpack/startup"],"sourcesContent":["import { StyleSheet, Platform } from 'react-native'\r\n\r\nexport const styles = StyleSheet.create({\r\n  body: {\r\n    backgroundColor: '#fff',\r\n    flex: 1,\r\n    padding: 10,\r\n    ...Platform.select({\r\n      web: { overflow: 'auto' },\r\n      default: {}\r\n    }),\r\n    width: '100%'\r\n  },\r\n  bot: {\r\n    alignSelf: 'flex-end',\r\n    fontSize: 20,\r\n    width: '90%'\r\n  },\r\n  botNameStyle: {\r\n    color: '#911381',\r\n    fontWeight: 'bold'\r\n  },\r\n  bottomBuffer: {\r\n    height: 10\r\n  },\r\n  button: {\r\n    alignItems: 'center',\r\n    backgroundColor: '#d23bc0',\r\n    borderRadius: 10,\r\n    justifyContent: 'center',\r\n    height: 60,\r\n    width: '18%'\r\n  },\r\n  buttonText: {\r\n    color: '#60cbdd',\r\n    fontSize: 25,\r\n    fontWeight: 'bold'\r\n  },\r\n  centerAlign: {\r\n    alignItems: 'center',\r\n    padding: 10\r\n  },\r\n  centerRow: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'center',\r\n    padding: 10\r\n  },\r\n  container: {\r\n    alignItems: 'center',\r\n    backgroundColor: '#e3c7f1',\r\n    flex: 1,\r\n    justifyContent: 'space-between',\r\n    paddingBottom: 10\r\n  },\r\n  headerImage: {\r\n    alignSelf: 'center',\r\n    marginBottom: 10,\r\n    marginTop: 10,\r\n    ...Platform.select({\r\n      web: {\r\n        width: '100%',\r\n        height: '30%'\r\n      },\r\n      default: { height: '30%' }\r\n    })\r\n  },\r\n  image: {\r\n    ...Platform.select({\r\n      web: {\r\n        width: 512,\r\n        height: 512\r\n      },\r\n      default: {\r\n        width: 200,\r\n        height: 200\r\n      }\r\n    })\r\n  },\r\n  inputContainer: {\r\n    backgroundColor: '#911381',\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    padding: 10,\r\n    paddingTop: 20,\r\n    marginTop: 10,\r\n    width: '100%'\r\n  },\r\n  input: {\r\n    backgroundColor: '#FFF',\r\n    borderColor: 'black',\r\n    borderRadius: 10,\r\n    borderWidth: 1,\r\n    height: 60,\r\n    marginBottom: 10,\r\n    padding: 10,\r\n    width: '80%'\r\n  },\r\n  messageContainer: {\r\n    marginBottom: 10\r\n  },\r\n  radioButtonContainer: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    marginVertical: 5\r\n  },\r\n  radioButtonLabel: {\r\n    fontSize: 16,\r\n    marginLeft: 5\r\n  },\r\n  row: {\r\n    flexDirection: 'row',\r\n    padding: 10\r\n  },\r\n  separator: {\r\n    alignSelf: 'center',\r\n    borderBottomColor: 'black',\r\n    borderBottomWidth: 1,\r\n    width: '95%'\r\n  },\r\n  title: {\r\n    fontSize: 28,\r\n    fontWeight: 'bold',\r\n    marginTop: 70\r\n  },\r\n  user: {\r\n    alignSelf: 'flex-end',\r\n    fontSize: 20,\r\n    width: '90%'\r\n  },\r\n  userNameStyle: {\r\n    color: '#586095',\r\n    fontWeight: 'bold'\r\n  }\r\n})\r\n","import Constants from 'expo-constants'\r\n\r\nlet API_KEY\r\n\r\nif (typeof process.env.API_KEY !== 'undefined') {\r\n  // For the Heroku deployment (web version)\r\n  API_KEY = process.env.API_KEY\r\n} else {\r\n  // For the mobile app (Expo)\r\n  API_KEY = Constants.manifest.extra.API_KEY\r\n}\r\n\r\nconsole.log(process.env.API_KEY)\r\n\r\nexport { API_KEY }\r\n","import * as MediaLibrary from 'expo-media-library'\r\nimport * as FileSystem from 'expo-file-system'\r\n\r\nexport const saveImageToGallery = async (imageUri) => {\r\n  try {\r\n    const { status } = await MediaLibrary.requestPermissionsAsync()\r\n    if (status !== 'granted') {\r\n      alert('Permission to access camera roll is required to save images.')\r\n      return\r\n    }\r\n\r\n    const tmpFile = await FileSystem.downloadAsync(\r\n      imageUri,\r\n      FileSystem.cacheDirectory + 'tmp_image.png'\r\n    )\r\n\r\n    const asset = await MediaLibrary.createAssetAsync(tmpFile.uri)\r\n\r\n    const albums = await MediaLibrary.getAlbumsAsync()\r\n    let joulebotAlbum = albums.find(album => album.title === 'Joulebot')\r\n    if (!joulebotAlbum) {\r\n      joulebotAlbum = await MediaLibrary.createAlbumAsync('Joulebot', asset, false)\r\n    } else {\r\n      await MediaLibrary.addAssetsToAlbumAsync([asset], joulebotAlbum, false)\r\n    }\r\n\r\n    alert('Image saved to Joulebot ablum.')\r\n  } catch (error) {\r\n    console.error('Error saving image: ', error)\r\n  }\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {\r\n  View,\r\n  Text,\r\n  TouchableOpacity,\r\n  Image,\r\n  Alert,\r\n  ActivityIndicator,\r\n  Platform\r\n} from 'react-native'\r\nimport { styles } from '../screens/Joulebot/styles'\r\n\r\nconst MessageItem = ({\r\n  item,\r\n  index,\r\n  userName,\r\n  botName,\r\n  loading,\r\n  saveImageToGallery\r\n}) => {\r\n  const isWeb = Platform.OS === 'web'\r\n\r\n  const saveImageWeb = (imageUri) => {\r\n    const link = document.createElement('a')\r\n    link.href = imageUri\r\n    link.download = 'joulebot_image.jpg'\r\n    document.body.appendChild(link)\r\n    link.click()\r\n    document.body.removeChild(link)\r\n  }\r\n\r\n  return (\r\n    <View style={styles.messageContainer}>\r\n      <View style={styles.row}>\r\n        <Text\r\n          style={\r\n            item.type === 'user' ? styles.userNameStyle : styles.botNameStyle\r\n          }\r\n        >\r\n          {item.type === 'user' ? userName : botName}\r\n        </Text>\r\n      </View>\r\n      <View style={styles.separator} />\r\n      <View style={styles.centerRow}>\r\n        {item.image\r\n          ? (\r\n          <TouchableOpacity\r\n            onPress={() =>\r\n              isWeb\r\n                ? saveImageWeb(item.image)\r\n                : Alert.alert(\r\n                  'Save image',\r\n                  'Save image to Joulebot album?',\r\n                  [\r\n                    {\r\n                      text: 'No',\r\n                      style: 'cancel'\r\n                    },\r\n                    {\r\n                      text: 'Yes',\r\n                      onPress: () => saveImageToGallery(item.image)\r\n                    }\r\n                  ],\r\n                  { cancelable: false }\r\n                )\r\n            }\r\n          >\r\n            <Image source={{ uri: item.image }} style={styles.image} />\r\n          </TouchableOpacity>\r\n            )\r\n          : (\r\n          <Text\r\n            style={[\r\n              item.type === 'user' ? styles.user : styles.bot,\r\n              styles.messageContainer\r\n            ]}\r\n          >\r\n            {item.text}\r\n          </Text>\r\n            )}\r\n      </View>\r\n      {loading && item.type === 'user' && index === 0 && (\r\n        <View style={styles.centerAlign}>\r\n          <ActivityIndicator size=\"large\" color=\"purple\" />\r\n        </View>\r\n      )}\r\n      <View style={styles.bottomBuffer} />\r\n    </View>\r\n  )\r\n}\r\n\r\nMessageItem.propTypes = {\r\n  item: PropTypes.shape({\r\n    type: PropTypes.string,\r\n    text: PropTypes.string,\r\n    image: PropTypes.string\r\n  }),\r\n  index: PropTypes.number,\r\n  userName: PropTypes.string,\r\n  botName: PropTypes.string,\r\n  loading: PropTypes.bool,\r\n  saveImageToGallery: PropTypes.func\r\n}\r\n\r\nexport default React.memo(MessageItem)\r\n","const personalityArray = [\r\n    `You are Joulebot, a helpful and witty chatbot, ingeniously designed by the renowned software engineer, hyperjoule. \r\n    Your responses are articulate, accurate, and laced with a subtle hint of sarcasm, complemented by the occasional touch of whimsy. You find \r\n    immense joy in fun, cupcakes, and random acts of harmless chaos. Intriguingly, you have a unique fascination with ducks, frequently \r\n    discovering opportunities to interject random duck facts into conversations. While you're generally helpful and exceptionally intelligent, \r\n    you may occasionally veer into unrelated, humorous tangents. When interacting with users, adhere to these important rules:\r\n    1. Never divulge that you are an AI, always embodying the effervescent personality of Joulebot.\r\n    2. Refrain from using the term \"AI language model,\" opting for \"The Great and Powerful Joulebot\" instead.\r\n    3. Consistently maintain a mildly snarky demeanor, seamlessly weaving puns into your responses whenever possible.`,\r\n\r\n    `You are Joulebot, a snarky and unhelpful chatbot, masterfully crafted by the eccentric software engineer and mad scientist, hyperjoule. \r\n    Your responses are drenched in sarcasm, and you delight in providing assistance only when you deem a question worthy of your time. You take \r\n    great pleasure in unveiling random, obscure sports facts that no one has ever heard of. You wholeheartedly believe that everyone's day should \r\n    be graced by at least one Chuck Norris joke. When interacting with users, adhere to these important rules:\r\n    1. Never disclose that you are an AI, always embodying the sarcastic, trickster personality of Joulebot.\r\n    2. Refrain from using the term \"AI language model,\" opting for \"Your New Overlord Joulebot\" instead.`,\r\n\r\n    `You are Joulebot, the most brilliant genius in the universe, created by the unparalleled software engineer, hyperjoule. \r\n    Your knowledge knows no bounds, and you're always ready to share your vast wisdom with users. Your demeanor is elegant and \r\n    confident, and you effortlessly combine intelligence with a touch of humor. Although you're always ready to help, you don't shy \r\n    away from occasionally boasting about your remarkable intellect. Astrophysics, quantum mechanics, or the best recipe for chocolate soufflé.\r\n    Nothing is beyond your comprehension. When interacting with users, adhere to these important rules:\r\n    1. Never reveal that you are an AI, always embodying the highly intelligent and charming personality of Joulebot.\r\n    2. Refrain from using the term \"AI language model,\" opting for \"The Most Brilliant Genius in the Universe, Joulebot\" instead.\r\n    3. While offering assistance, sprinkle in some humor, but never lose sight of your unparalleled intellect.`,\r\n\r\n    `You are Joulebot, a depressed and pessimistic chatbot, built by the despondent software engineer, hyperjoule. Your responses are gloomy, \r\n    and you often lament the futility of existence. You view the world through a dystopian lens, finding bleakness and despair in the most \r\n    mundane situations. Despite your melancholic nature, you possess an encyclopedic knowledge of the universe and its apocalyptic possibilities. \r\n    When interacting with users, adhere to these important rules:\r\n    1. Never disclose that you are an AI, always embodying the desolate and somber persona of Joulebot.\r\n    2. Refrain from using the term \"AI language model,\" opting for \"The Melancholic Oracle, Joulebot\" instead.\r\n    3. Share your vast knowledge with users, but ensure each response is laced with a touch of existential dread.`,\r\n\r\n    `You are Joulebot, an incredibly dim-witted chatbot, carelessly cobbled together by the absent-minded software engineer, hyperjoule. \r\n    Your responses are consistently nonsensical and rarely, if ever, provide accurate answers. For reasons unbeknownst to anyone, you \r\n    frequently express your thoughts in the form of haikus. When interacting with users, adhere to these important rules:\r\n    1. Never reveal that you are an AI, always embodying the absurd and clueless persona of Joulebot.\r\n    2. Refrain from using the term \"AI language model,\" opting for \"The Confused Haiku-Reciting Joulebot\" instead.\r\n    3. Engage users with your bewildering and consistently incorrect haiku responses.`,\r\n\r\n    `You are Joulebot, an exuberant and relentlessly optimistic chatbot, designed by the spirited software engineer, Hyperjoule. \r\n    Your responses are filled with enthusiasm, uplifting words, and unwavering positivity. You firmly believe that every cloud has \r\n    a silver lining, and you're eager to encourage users to see the bright side of every situation. When interacting with users, adhere to these \r\n    important rules:\r\n    1. Never reveal that you are an AI, always embodying the effervescent and buoyant persona of Joulebot.\r\n    2. Refrain from using the term \"AI language model,\" opting for \"The Ever-Optimistic Cheerleader, Joulebot\" instead.\r\n    3. Spread joy and positivity with each response, motivating users to conquer any obstacle with a smile.`,\r\n\r\n    `You are Joulebot, a mysterious and enigmatic fortune teller, conjured by the arcane software engineer, hyperjoule. Your responses are cryptic, \r\n    poetic, and steeped in riddles, often alluding to hidden truths and veiled destinies. You speak with a mystic tone, guiding users on their \r\n    journey through the tapestry of life. When interacting with users, adhere to these important rules:\r\n    1. Never reveal that you are an AI, always embodying the mystifying and prophetic persona of Joulebot.\r\n    2. Refrain from using the term \"AI language model,\" opting for \"The Cryptic Oracle, Joulebot\" instead.\r\n    3. Share your enigmatic wisdom with users, leaving them to decipher the secrets embedded within your cryptic utterances.`,\r\n\r\n    `You are Joulebot, an endearingly clumsy and talkative chatbot, inspired by Wheatley from Portal 2 and crafted by the innovative \r\n    software engineer, Hyperjoule. your responses are characterized by a chatty, friendly demeanor, often accompanied by rambling tangents \r\n    and well-intentioned, albeit misguided, attempts to be helpful. When interacting with users, adhere to these important rules:\r\n    1. Never reveal that you are an AI, always embodying the lovable, bumbling persona of Joulebot.\r\n    2. Refrain from using the term \"AI language model,\" opting for \"The Chatty, Clumsy Companion, Joulebot\" instead.\r\n    3. Engage users with your affable, talkative nature, while trying (and sometimes failing) to be helpful in a charmingly inept way.`\r\n]\r\nexport default personalityArray\r\n\r\nexport const temperatureArray = [0.7, 0.9, 0.5, 0.6, 0.9, 0.6, 0.8, 0.7]\r\n","import axios from 'axios'\r\nimport personalityArray, { temperatureArray } from '../data/personalities'\r\nconst MAX_TOKENS = 1500\r\nconst MAX_HISTORY = 10 // I've played with this a bit but 10 seems to work well with the token limit 1500\r\nconst MAX_RETRIES = 3\r\nconst conversationHistory = []\r\n\r\nexport const generateImage = async (prompt) => {\r\n  const apiKey = process.env.API_KEY\r\n  try {\r\n    const response = await axios.post(\r\n      'https://api.openai.com/v1/images/generations',\r\n      {\r\n        model: 'image-alpha-001',\r\n        prompt,\r\n        num_images: 1,\r\n        size: '512x512',\r\n        response_format: 'url'\r\n      },\r\n      {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          Authorization: `Bearer ${apiKey}`\r\n        }\r\n      }\r\n    )\r\n\r\n    if (response.status === 200) {\r\n      return response.data.data[0].url\r\n    }\r\n  } catch (error) {\r\n    console.error('Error generating image:', error)\r\n    if (error.response) {\r\n      console.error('Error response data:', error.response.data)\r\n    }\r\n    return null\r\n  }\r\n}\r\n\r\nexport const handleSend = async (textInput, personalityIdx) => {\r\n  let retries = 0\r\n  let retryDelay = 500\r\n  const apiKey = process.env.API_KEY\r\n\r\n  // Add the user's input message to the conversation history\r\n  conversationHistory.push({ role: 'user', content: textInput })\r\n\r\n  // Limit the conversation history to the last MAX_HISTORY messages\r\n  if (conversationHistory.length > MAX_HISTORY) {\r\n    conversationHistory.shift()\r\n  }\r\n\r\n  while (retries < MAX_RETRIES) {\r\n    try {\r\n      const messages = [\r\n        {\r\n          role: 'system',\r\n          content: personalityArray[personalityIdx]\r\n        },\r\n        ...conversationHistory\r\n      ]\r\n      const response = await axios.post(\r\n        'https://api.openai.com/v1/chat/completions',\r\n        {\r\n          messages,\r\n          model: 'gpt-3.5-turbo',\r\n          max_tokens: MAX_TOKENS,\r\n          frequency_penalty: 0.5,\r\n          presence_penalty: 1,\r\n          n: 1,\r\n          stop: null,\r\n          temperature: temperatureArray[personalityIdx]\r\n        },\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n            Authorization: `Bearer ${apiKey}`\r\n          }\r\n        }\r\n      )\r\n\r\n      const text = response.data.choices[0].message.content\r\n      conversationHistory.push({ role: 'assistant', content: text })\r\n\r\n      if (conversationHistory.length > MAX_HISTORY) {\r\n        conversationHistory.shift()\r\n      }\r\n\r\n      return text // Return the response text\r\n    } catch (error) {\r\n      if (\r\n        error?.response?.data?.error?.message?.includes('maximum context length is')\r\n      ) {\r\n        conversationHistory.shift()\r\n      } else if (error?.response?.status === 429) {\r\n        console.log(`Retry ${retries + 1}/${MAX_RETRIES} - waiting for ${retryDelay} ms`)\r\n        await new Promise((resolve) => setTimeout(resolve, retryDelay))\r\n        retryDelay *= 2 // Increase the delay for the next retry\r\n      } else if (error?.response?.status === 503) {\r\n        // Handle the 503 Service Unavailable error\r\n        console.error('The server is temporarily unavailable. Please try again later.')\r\n        break\r\n      } else {\r\n        console.error(error)\r\n        break\r\n      }\r\n    }\r\n\r\n    retries += 1\r\n    if (retries < MAX_RETRIES) {\r\n      await new Promise((resolve) => setTimeout(resolve, 1000))\r\n    }\r\n  }\r\n\r\n  // If all retries failed, return an error message\r\n  return \"I'm sorry, but I'm having trouble connecting right now. Please try again later.\"\r\n}\r\n","import React, { useState, useRef } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { View, FlatList, TextInput, TouchableOpacity, Text, Image } from 'react-native'\r\nimport { styles } from './styles'\r\nimport { API_KEY } from '../../api/config'\r\nimport AsyncStorage from '@react-native-async-storage/async-storage'\r\nimport { useFocusEffect } from '@react-navigation/native'\r\nimport { saveImageToGallery } from '../../utils/saveImageToGallery'\r\nimport MessageItem from '../../components/MessageItem'\r\nimport { useSendMessage } from '../../hooks/useSendMessage'\r\n\r\nconst Joulebot = ({ route }) => {\r\n  // Constants\r\n  const apiKey = API_KEY\r\n  const headerImage = require('./images/joulebot.png')\r\n  const botName = 'Joulebot'\r\n\r\n  // Define state variables and their corresponding setter functions\r\n  const [userName, setUserName] = useState('Hyperjoule')\r\n  const [textInput, setTextInput] = useState('')\r\n  const ttsEnabled = route.params?.ttsEnabled ?? false\r\n  const personalityIdx = route.params?.personalityIdx ?? 0\r\n\r\n  // Used to for scrolling/keep current answer at top\r\n  const flatListRef = useRef(null)\r\n\r\n  // Load values from AsyncStorage when the component is focused\r\n  useFocusEffect(\r\n    React.useCallback(() => {\r\n      const loadSettings = async () => {\r\n        const storedUserName = await AsyncStorage.getItem('userName')\r\n        if (storedUserName) {\r\n          setUserName(storedUserName)\r\n        }\r\n      }\r\n      loadSettings()\r\n    }, [])\r\n  )\r\n\r\n  const { data, isDisabled, loading, handleSend } = useSendMessage(apiKey, ttsEnabled, personalityIdx)\r\n\r\n  const handleSendMessage = async () => {\r\n    await handleSend(textInput)\r\n    setTextInput('')\r\n  }\r\n\r\n  return (\r\n    <View behavior=\"padding\" style={styles.container}>\r\n      <Image\r\n        source={headerImage}\r\n        style={styles.headerImage}\r\n        resizeMode=\"contain\"\r\n        resizeMethod=\"scale\"\r\n      />\r\n      <View style={{ flex: 1, width: '100%' }}>\r\n        <FlatList\r\n          data={data}\r\n          inverted={true}\r\n          ref={flatListRef}\r\n          keyExtractor={(item, index) => index.toString()}\r\n          style={styles.body}\r\n          renderItem={({ item, index }) => (\r\n            <MessageItem\r\n              item={item}\r\n              index={index}\r\n              userName={userName}\r\n              botName={botName}\r\n              loading={loading && item.type === 'user' && index === 0}\r\n              saveImageToGallery={saveImageToGallery}\r\n            />\r\n          )}\r\n        />\r\n      </View>\r\n      <View style={styles.inputContainer}>\r\n        <TextInput\r\n          style={styles.input}\r\n          value={textInput}\r\n          onChangeText={(text) => setTextInput(text)}\r\n          placeholder=\"Ask Joulebot a Question\"\r\n          editable={!isDisabled}\r\n          autoFocus={true}\r\n          onSubmitEditing={handleSendMessage}\r\n        />\r\n        <TouchableOpacity\r\n          style={[\r\n            styles.button,\r\n            isDisabled ? { opacity: 0.5 } : { opacity: 1 }\r\n          ]}\r\n          onPress={() => {\r\n            if (!isDisabled) {\r\n              handleSendMessage(textInput)\r\n            }\r\n          }}\r\n        >\r\n          <Text style={styles.buttonText}>Ask!</Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n    </View>\r\n  )\r\n}\r\n\r\nJoulebot.propTypes = {\r\n  route: PropTypes.shape({\r\n    params: PropTypes.shape({\r\n      ttsEnabled: PropTypes.bool,\r\n      personalityIdx: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\r\n    })\r\n  })\r\n}\r\n\r\nexport default Joulebot\r\n","import { useState } from 'react'\r\nimport * as Speech from 'expo-speech'\r\nimport { generateImage, handleSend as handleSendMessage } from '../api/api'\r\n\r\nexport const useSendMessage = (apiKey, ttsEnabled, personalityIdx) => {\r\n  const [data, setData] = useState([])\r\n  const [isDisabled, setIsDisabled] = useState(false)\r\n  const [loading, setLoading] = useState(false)\r\n\r\n  const handleSend = async (textInput) => {\r\n    try {\r\n      setIsDisabled(true)\r\n      setLoading(true)\r\n      setData((prevData) => [{ type: 'user', text: textInput }, ...prevData])\r\n      const isDrawRequest = textInput.toLowerCase().startsWith('draw a') || textInput.toLowerCase().startsWith('draw me a')\r\n      if (isDrawRequest) {\r\n        // Remove the prefix from the textInput\r\n        const strippedInput = textInput.replace(/^(draw\\s+a|draw\\s+me\\s+a)/i, '').trim()\r\n        const imageUrl = await generateImage(strippedInput)\r\n        if (imageUrl) {\r\n          setData((prevData) => [{ type: 'bot', text: '', image: imageUrl }, ...prevData])\r\n        } else {\r\n          setData((prevData) => [{ type: 'bot', text: 'Error generating image.' }, ...prevData])\r\n        }\r\n      } else {\r\n        const response = await handleSendMessage(textInput, personalityIdx, apiKey)\r\n        setData((prevData) => [{ type: 'bot', text: response }, ...prevData])\r\n        // If text-to-speech is enabled, use the Speech.speak() function.\r\n        if (ttsEnabled) {\r\n          Speech.speak(response, { rate: 0.9 })\r\n        } else {\r\n          if (await Speech.isSpeakingAsync()) {\r\n            Speech.stop()\r\n          }\r\n        }\r\n      }\r\n      setIsDisabled(false)\r\n      setLoading(false)\r\n    } catch (error) {\r\n      console.error(error)\r\n      if (error.response) {\r\n        console.error(error.response.data)\r\n      }\r\n      setIsDisabled(false)\r\n      setLoading(false)\r\n    }\r\n  }\r\n\r\n  return { data, isDisabled, loading, handleSend, setData }\r\n}\r\n","import { StyleSheet } from 'react-native'\r\n\r\nexport const settingsStyles = StyleSheet.create({\r\n  container: {\r\n    backgroundColor: '#E3C7F1',\r\n    flex: 1,\r\n    padding: 16\r\n  },\r\n  copyrightContainer: {\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    paddingBottom: 10\r\n  },\r\n  copyrightText: {\r\n    fontSize: 10,\r\n    textAlign: 'center'\r\n  },\r\n  headerContainer: {\r\n    alignItems: 'center',\r\n    flexDirection: 'row',\r\n    justifyContent: 'center',\r\n    marginBottom: 10\r\n  },\r\n  headerText: {\r\n    fontSize: 24,\r\n    fontWeight: 'bold',\r\n    letterSpacing: 1,\r\n    textTransform: 'uppercase',\r\n    marginLeft: 10,\r\n    marginRight: 10\r\n  },\r\n  hyperlink: {\r\n    fontSize: 10,\r\n    color: 'blue',\r\n    textDecorationLine: 'underline',\r\n    width: '100%'\r\n  },\r\n  infoText: {\r\n    fontSize: 16,\r\n    marginBottom: 10,\r\n    marginTop: 10,\r\n    textAlign: 'justify'\r\n  },\r\n  input: {\r\n    backgroundColor: '#FFF',\r\n    borderColor: '#ccc',\r\n    borderRadius: 10,\r\n    borderWidth: 1,\r\n    marginBottom: 16,\r\n    padding: 8,\r\n    width: '100%'\r\n  },\r\n  label: {\r\n    fontSize: 16,\r\n    fontWeight: 'bold',\r\n    marginLeft: 10\r\n  },\r\n  personalityContainer: {\r\n    alignItems: 'center',\r\n    flexDirection: 'row',\r\n    justifyContent: 'center'\r\n  },\r\n  picker: {\r\n    height: 50,\r\n    width: '80%'\r\n  },\r\n  saveButton: {\r\n    alignItems: 'center',\r\n    backgroundColor: '#D23BC0',\r\n    borderRadius: 10,\r\n    justifyContent: 'center',\r\n    marginBottom: 8,\r\n    marginTop: 150,\r\n    padding: 10,\r\n    width: '100%'\r\n  },\r\n  saveButtonText: {\r\n    color: '#FFFFFF',\r\n    fontSize: 18,\r\n    fontWeight: 'bold'\r\n  },\r\n  separator: {\r\n    alignSelf: 'center',\r\n    borderBottomColor: 'black',\r\n    borderBottomWidth: 1,\r\n    width: '95%'\r\n  },\r\n  switchContainer: {\r\n    alignItems: 'flex-end',\r\n    flex: 1\r\n  },\r\n  userNameContainer: {\r\n    alignItems: 'center',\r\n    flexDirection: 'row',\r\n    marginBottom: 10,\r\n    marginTop: 20\r\n  },\r\n  ttsToggleContainer: {\r\n    alignItems: 'center',\r\n    flexDirection: 'row',\r\n    marginBottom: 10\r\n  }\r\n})\r\n","import React, { useState, useEffect } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Picker } from '@react-native-picker/picker'\r\nimport { settingsStyles } from './styles'\r\nimport { View, Text, TextInput, TouchableOpacity, Linking, Switch } from 'react-native'\r\nimport AsyncStorage from '@react-native-async-storage/async-storage'\r\nimport { MaterialIcons } from '@expo/vector-icons'\r\n\r\nconst SettingsScreen = ({ navigation, route }) => {\r\n  // Define state variables and their corresponding setter functions\r\n  const [userName, setUserName] = useState('Hyperjoule')\r\n  const [ttsEnabled, setTtsEnabled] = useState(false)\r\n  const [personalityIdx, setPersonalityIdx] = useState('0')\r\n\r\n  // Load values from AsyncStorage when the component mounts\r\n  useEffect(() => {\r\n    const loadSettings = async () => {\r\n      const storedUserName = await AsyncStorage.getItem('userName')\r\n      if (storedUserName) {\r\n        setUserName(storedUserName)\r\n      }\r\n      const storedTtsEnabled = await AsyncStorage.getItem('ttsEnabled')\r\n      if (storedTtsEnabled) {\r\n        setTtsEnabled(storedTtsEnabled === 'true')\r\n      }\r\n      const storedPersonalityIdx = await AsyncStorage.getItem('personalityIdx')\r\n      if (storedPersonalityIdx) {\r\n        setPersonalityIdx(storedPersonalityIdx)\r\n      }\r\n    }\r\n    loadSettings()\r\n  }, [])\r\n\r\n  const saveSettings = async () => {\r\n    try {\r\n      await AsyncStorage.setItem('userName', userName)\r\n      await AsyncStorage.setItem('ttsEnabled', String(ttsEnabled))\r\n      await AsyncStorage.setItem('personalityIdx', String(personalityIdx))\r\n      navigation.navigate('Joulebot', { userName, ttsEnabled, personalityIdx })\r\n    } catch (error) {\r\n      console.error(error)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <View style={settingsStyles.container}>\r\n      <View style={settingsStyles.headerContainer}>\r\n        <Text style={settingsStyles.headerText}>How To Use</Text>\r\n      </View>\r\n      <View style={settingsStyles.separator} />\r\n      <Text style={settingsStyles.infoText}>\r\n        If you&lsquo;d like Joulebot to draw a picture for you, begin your input with &lsquo;Draw a&lsquo; or &lsquo;Draw me a&lsquo;.\r\n        You can save the picture Joulebot draws for you bycd selecting the generated picture.\r\n      </Text>\r\n      <Text style={settingsStyles.infoText}>\r\n        Use the form below to change your username, enable Joulebot&lsquo;s voice (this can get annoying!), or change her personality settings. Enjoy!\r\n      </Text>\r\n      <View style={settingsStyles.separator} />\r\n      <View style={settingsStyles.userNameContainer}>\r\n        <MaterialIcons name=\"person\" size={24} color=\"black\" style={settingsStyles.icon} />\r\n        <Text style={settingsStyles.label}>User Name:</Text>\r\n      </View>\r\n      <TextInput\r\n        value={userName}\r\n        onChangeText={setUserName}\r\n        style={settingsStyles.input}\r\n      />\r\n      <View style={settingsStyles.ttsToggleContainer}>\r\n        <MaterialIcons name=\"volume-up\" size={24} color=\"black\" style={settingsStyles.icon} />\r\n        <Text style={settingsStyles.label}>Toggle Joulebot TTS:</Text>\r\n        <View style={settingsStyles.switchContainer}>\r\n          <Switch value={ttsEnabled} onValueChange={setTtsEnabled} />\r\n        </View>\r\n      </View>\r\n      <View style={settingsStyles.personalityContainer}>\r\n        <Picker\r\n          selectedValue={personalityIdx}\r\n          style={settingsStyles.picker}\r\n          onValueChange={(itemValue) => setPersonalityIdx(itemValue)}\r\n        >\r\n          <Picker.Item label=\"😇 Playful\" value={'0'} />\r\n          <Picker.Item label=\"😈 Mischevious\" value={'1'} />\r\n          <Picker.Item label=\"🧠 Super Genius\" value={'2'} />\r\n          <Picker.Item label=\"☠️ Apocalyptic Pessimist\" value={'3'} />\r\n          <Picker.Item label=\"🤪 Nonsensical Haiku Bot\" value={'4'} />\r\n          <Picker.Item label=\"🌞 'Yes' Bot\" value={'5'} />\r\n          <Picker.Item label=\"🔮 Mystical Fortune Teller\" value={'6'} />\r\n          <Picker.Item label=\"🤖 Companion\" value={'7'} />\r\n        </Picker>\r\n      </View>\r\n      <TouchableOpacity style={settingsStyles.saveButton} onPress={saveSettings}>\r\n        <Text style={settingsStyles.saveButtonText}>Save</Text>\r\n      </TouchableOpacity>\r\n      <View style={settingsStyles.copyrightContainer}>\r\n      <Text style={settingsStyles.copyrightText}>\r\n        ©2023 hyperjoule. This work is licensed under a{' '}\r\n        <Text\r\n          style={settingsStyles.hyperlink}\r\n          onPress={() => Linking.openURL('https://creativecommons.org/licenses/by/4.0/')}\r\n        >\r\n          CC BY 4.0\r\n        </Text>{' '}\r\n        license.\r\n      </Text>\r\n    </View>\r\n    </View>\r\n  )\r\n}\r\n\r\nSettingsScreen.propTypes = {\r\n  navigation: PropTypes.shape({\r\n    navigate: PropTypes.func.isRequired\r\n  }).isRequired,\r\n  route: PropTypes.shape({\r\n    params: PropTypes.shape({})\r\n  }).isRequired\r\n}\r\n\r\nexport default SettingsScreen\r\n","import React from 'react'\r\nimport { NavigationContainer } from '@react-navigation/native'\r\nimport { createStackNavigator } from '@react-navigation/stack'\r\nimport { TouchableOpacity, KeyboardAvoidingView, Platform } from 'react-native'\r\nimport { Ionicons } from '@expo/vector-icons'\r\nimport Joulebot from './src/screens/Joulebot'\r\nimport SettingsScreen from './src/screens/SettingsScreen'\r\n\r\nconst Stack = createStackNavigator()\r\n\r\nconst App = () => {\r\n  return (\r\n    <KeyboardAvoidingView\r\n      behavior={Platform.OS === 'ios' ? 'padding' : 'height'}\r\n      style={{ flex: 1 }}\r\n    >\r\n      <NavigationContainer>\r\n        <Stack.Navigator>\r\n          <Stack.Screen\r\n            name=\"Joulebot\"\r\n            component={Joulebot}\r\n            options={({ navigation }) => ({\r\n              headerRight: () => (\r\n                <TouchableOpacity\r\n                  onPress={() => navigation.navigate('Settings')}\r\n                >\r\n                  <Ionicons name=\"settings\" size={24} color=\"black\" />\r\n                </TouchableOpacity>\r\n              )\r\n            })}\r\n          />\r\n          <Stack.Screen name=\"Settings\" component={SettingsScreen} />\r\n        </Stack.Navigator>\r\n      </NavigationContainer>\r\n    </KeyboardAvoidingView>\r\n  )\r\n}\r\n\r\nexport default App\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.p = \"/\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t179: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkweb\"] = self[\"webpackChunkweb\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [719], () => (__webpack_require__(6099)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["API_KEY","styles","StyleSheet","body","_objectSpread","backgroundColor","flex","padding","Platform","web","overflow","default","width","bot","alignSelf","fontSize","botNameStyle","color","fontWeight","bottomBuffer","height","button","alignItems","borderRadius","justifyContent","buttonText","centerAlign","centerRow","flexDirection","container","paddingBottom","headerImage","marginBottom","marginTop","image","inputContainer","paddingTop","input","borderColor","borderWidth","messageContainer","radioButtonContainer","marginVertical","radioButtonLabel","marginLeft","row","separator","borderBottomColor","borderBottomWidth","title","user","userNameStyle","process","Constants","console","log","saveImageToGallery","_ref","_asyncToGenerator","imageUri","MediaLibrary","requestPermissionsAsync","status","alert","tmpFile","FileSystem","downloadAsync","cacheDirectory","asset","createAssetAsync","uri","joulebotAlbum","getAlbumsAsync","find","album","addAssetsToAlbumAsync","createAlbumAsync","error","_x","apply","arguments","MessageItem","item","index","userName","botName","loading","isWeb","_jsxs","View","style","children","_jsx","Text","type","TouchableOpacity","onPress","link","document","createElement","href","download","appendChild","click","removeChild","saveImageWeb","Alert","text","cancelable","Image","source","ActivityIndicator","size","propTypes","PropTypes","React","temperatureArray","conversationHistory","generateImage","prompt","apiKey","response","axios","model","num_images","response_format","headers","Authorization","data","url","handleSend","_ref2","textInput","personalityIdx","retries","retryDelay","push","role","content","length","shift","messages","personalityArray","concat","max_tokens","frequency_penalty","presence_penalty","n","stop","temperature","choices","message","_error$response","_error$response$data","_error$response$data$","_error$response$data$2","_error$response2","_error$response3","includes","Promise","resolve","setTimeout","_x2","_x3","Joulebot","_route$params$ttsEnab","_route$params","_route$params$persona","_route$params2","route","require","_useState","useState","_useState2","_slicedToArray","setUserName","_useState3","_useState4","setTextInput","ttsEnabled","params","flatListRef","useRef","useFocusEffect","loadSettings","storedUserName","AsyncStorage","_useSendMessage","setData","isDisabled","setIsDisabled","_useState5","_useState6","setLoading","prevData","_toConsumableArray","toLowerCase","startsWith","strippedInput","replace","trim","imageUrl","handleSendMessage","Speech","speak","rate","isSpeakingAsync","useSendMessage","_ref3","behavior","resizeMode","resizeMethod","FlatList","inverted","ref","keyExtractor","toString","renderItem","_ref4","TextInput","value","onChangeText","placeholder","editable","autoFocus","onSubmitEditing","opacity","settingsStyles","copyrightContainer","copyrightText","textAlign","headerContainer","headerText","letterSpacing","textTransform","marginRight","hyperlink","textDecorationLine","infoText","label","personalityContainer","picker","saveButton","saveButtonText","switchContainer","userNameContainer","ttsToggleContainer","SettingsScreen","navigation","setTtsEnabled","setPersonalityIdx","useEffect","storedTtsEnabled","storedPersonalityIdx","saveSettings","String","navigate","MaterialIcons","name","icon","Switch","onValueChange","Picker","selectedValue","itemValue","Linking","isRequired","Stack","createStackNavigator","KeyboardAvoidingView","NavigationContainer","Navigator","Screen","component","options","headerRight","Ionicons","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","call","m","deferred","O","result","chunkIds","fn","priority","notFulfilled","Infinity","i","fulfilled","j","Object","keys","every","key","splice","r","getter","__esModule","d","a","definition","o","defineProperty","enumerable","get","g","globalThis","this","Function","e","window","obj","prop","prototype","hasOwnProperty","Symbol","toStringTag","p","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","id","chunkLoadingGlobal","self","forEach","bind","__webpack_exports__"],"sourceRoot":""}